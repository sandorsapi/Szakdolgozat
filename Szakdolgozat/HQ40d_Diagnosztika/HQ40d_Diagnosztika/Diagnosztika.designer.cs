#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HQ40d_Diagnosztika
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Diagnosztika")]
	public partial class DiagnosztikaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBerendezesek(Berendezesek instance);
    partial void UpdateBerendezesek(Berendezesek instance);
    partial void DeleteBerendezesek(Berendezesek instance);
    partial void InsertFajltarolo(Fajltarolo instance);
    partial void UpdateFajltarolo(Fajltarolo instance);
    partial void DeleteFajltarolo(Fajltarolo instance);
    partial void InsertKemhata(Kemhata instance);
    partial void UpdateKemhata(Kemhata instance);
    partial void DeleteKemhata(Kemhata instance);
    partial void InsertMikor(Mikor instance);
    partial void UpdateMikor(Mikor instance);
    partial void DeleteMikor(Mikor instance);
    partial void InsertSzemelyek(Szemelyek instance);
    partial void UpdateSzemelyek(Szemelyek instance);
    partial void DeleteSzemelyek(Szemelyek instance);
    partial void InsertTipus(Tipus instance);
    partial void UpdateTipus(Tipus instance);
    partial void DeleteTipus(Tipus instance);
    partial void InsertVezetokepesseg(Vezetokepesseg instance);
    partial void UpdateVezetokepesseg(Vezetokepesseg instance);
    partial void DeleteVezetokepesseg(Vezetokepesseg instance);
    #endregion
		
		public DiagnosztikaDataContext() : 
				base(global::HQ40d_Diagnosztika.Properties.Settings.Default.DiagnosztikaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DiagnosztikaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DiagnosztikaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DiagnosztikaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DiagnosztikaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Berendezesek> Berendezeseks
		{
			get
			{
				return this.GetTable<Berendezesek>();
			}
		}
		
		public System.Data.Linq.Table<Fajltarolo> Fajltarolos
		{
			get
			{
				return this.GetTable<Fajltarolo>();
			}
		}
		
		public System.Data.Linq.Table<Kemhata> Kemhatas
		{
			get
			{
				return this.GetTable<Kemhata>();
			}
		}
		
		public System.Data.Linq.Table<Mikor> Mikors
		{
			get
			{
				return this.GetTable<Mikor>();
			}
		}
		
		public System.Data.Linq.Table<Szemelyek> Szemelyeks
		{
			get
			{
				return this.GetTable<Szemelyek>();
			}
		}
		
		public System.Data.Linq.Table<Tipus> Tipus
		{
			get
			{
				return this.GetTable<Tipus>();
			}
		}
		
		public System.Data.Linq.Table<Vezetokepesseg> Vezetokepessegs
		{
			get
			{
				return this.GetTable<Vezetokepesseg>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Berendezesek")]
	public partial class Berendezesek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _berendezesID;
		
		private string _berendezes_nev;
		
		private EntitySet<Kemhata> _Kemhatas;
		
		private EntitySet<Vezetokepesseg> _Vezetokepessegs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnberendezesIDChanging(int value);
    partial void OnberendezesIDChanged();
    partial void Onberendezes_nevChanging(string value);
    partial void Onberendezes_nevChanged();
    #endregion
		
		public Berendezesek()
		{
			this._Kemhatas = new EntitySet<Kemhata>(new Action<Kemhata>(this.attach_Kemhatas), new Action<Kemhata>(this.detach_Kemhatas));
			this._Vezetokepessegs = new EntitySet<Vezetokepesseg>(new Action<Vezetokepesseg>(this.attach_Vezetokepessegs), new Action<Vezetokepesseg>(this.detach_Vezetokepessegs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_berendezesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int berendezesID
		{
			get
			{
				return this._berendezesID;
			}
			set
			{
				if ((this._berendezesID != value))
				{
					this.OnberendezesIDChanging(value);
					this.SendPropertyChanging();
					this._berendezesID = value;
					this.SendPropertyChanged("berendezesID");
					this.OnberendezesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_berendezes_nev", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string berendezes_nev
		{
			get
			{
				return this._berendezes_nev;
			}
			set
			{
				if ((this._berendezes_nev != value))
				{
					this.Onberendezes_nevChanging(value);
					this.SendPropertyChanging();
					this._berendezes_nev = value;
					this.SendPropertyChanged("berendezes_nev");
					this.Onberendezes_nevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Berendezesek_Kemhata", Storage="_Kemhatas", ThisKey="berendezesID", OtherKey="berendezes_azonosito")]
		public EntitySet<Kemhata> Kemhatas
		{
			get
			{
				return this._Kemhatas;
			}
			set
			{
				this._Kemhatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Berendezesek_Vezetokepesseg", Storage="_Vezetokepessegs", ThisKey="berendezesID", OtherKey="berendezes_azonosito")]
		public EntitySet<Vezetokepesseg> Vezetokepessegs
		{
			get
			{
				return this._Vezetokepessegs;
			}
			set
			{
				this._Vezetokepessegs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kemhatas(Kemhata entity)
		{
			this.SendPropertyChanging();
			entity.Berendezesek = this;
		}
		
		private void detach_Kemhatas(Kemhata entity)
		{
			this.SendPropertyChanging();
			entity.Berendezesek = null;
		}
		
		private void attach_Vezetokepessegs(Vezetokepesseg entity)
		{
			this.SendPropertyChanging();
			entity.Berendezesek = this;
		}
		
		private void detach_Vezetokepessegs(Vezetokepesseg entity)
		{
			this.SendPropertyChanging();
			entity.Berendezesek = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fajltarolo")]
	public partial class Fajltarolo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fajlID;
		
		private string _fajlnev;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfajlIDChanging(int value);
    partial void OnfajlIDChanged();
    partial void OnfajlnevChanging(string value);
    partial void OnfajlnevChanged();
    #endregion
		
		public Fajltarolo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fajlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int fajlID
		{
			get
			{
				return this._fajlID;
			}
			set
			{
				if ((this._fajlID != value))
				{
					this.OnfajlIDChanging(value);
					this.SendPropertyChanging();
					this._fajlID = value;
					this.SendPropertyChanged("fajlID");
					this.OnfajlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fajlnev", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string fajlnev
		{
			get
			{
				return this._fajlnev;
			}
			set
			{
				if ((this._fajlnev != value))
				{
					this.OnfajlnevChanging(value);
					this.SendPropertyChanging();
					this._fajlnev = value;
					this.SendPropertyChanged("fajlnev");
					this.OnfajlnevChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kemhatas")]
	public partial class Kemhata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _phID;
		
		private double _kemhatas;
		
		private double _hofok;
		
		private int _tipus;
		
		private int _mikor;
		
		private int _meres_kod;
		
		private int _berendezes_azonosito;
		
		private EntityRef<Berendezesek> _Berendezesek;
		
		private EntityRef<Mikor> _Mikor1;
		
		private EntityRef<Tipus> _Tipus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnphIDChanging(int value);
    partial void OnphIDChanged();
    partial void OnkemhatasChanging(double value);
    partial void OnkemhatasChanged();
    partial void OnhofokChanging(double value);
    partial void OnhofokChanged();
    partial void OntipusChanging(int value);
    partial void OntipusChanged();
    partial void OnmikorChanging(int value);
    partial void OnmikorChanged();
    partial void Onmeres_kodChanging(int value);
    partial void Onmeres_kodChanged();
    partial void Onberendezes_azonositoChanging(int value);
    partial void Onberendezes_azonositoChanged();
    #endregion
		
		public Kemhata()
		{
			this._Berendezesek = default(EntityRef<Berendezesek>);
			this._Mikor1 = default(EntityRef<Mikor>);
			this._Tipus1 = default(EntityRef<Tipus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int phID
		{
			get
			{
				return this._phID;
			}
			set
			{
				if ((this._phID != value))
				{
					this.OnphIDChanging(value);
					this.SendPropertyChanging();
					this._phID = value;
					this.SendPropertyChanged("phID");
					this.OnphIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kemhatas", DbType="Float NOT NULL")]
		public double kemhatas
		{
			get
			{
				return this._kemhatas;
			}
			set
			{
				if ((this._kemhatas != value))
				{
					this.OnkemhatasChanging(value);
					this.SendPropertyChanging();
					this._kemhatas = value;
					this.SendPropertyChanged("kemhatas");
					this.OnkemhatasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hofok", DbType="Float NOT NULL")]
		public double hofok
		{
			get
			{
				return this._hofok;
			}
			set
			{
				if ((this._hofok != value))
				{
					this.OnhofokChanging(value);
					this.SendPropertyChanging();
					this._hofok = value;
					this.SendPropertyChanged("hofok");
					this.OnhofokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipus", DbType="Int NOT NULL")]
		public int tipus
		{
			get
			{
				return this._tipus;
			}
			set
			{
				if ((this._tipus != value))
				{
					if (this._Tipus1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntipusChanging(value);
					this.SendPropertyChanging();
					this._tipus = value;
					this.SendPropertyChanged("tipus");
					this.OntipusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mikor", DbType="Int NOT NULL")]
		public int mikor
		{
			get
			{
				return this._mikor;
			}
			set
			{
				if ((this._mikor != value))
				{
					if (this._Mikor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmikorChanging(value);
					this.SendPropertyChanging();
					this._mikor = value;
					this.SendPropertyChanged("mikor");
					this.OnmikorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meres_kod", DbType="Int NOT NULL")]
		public int meres_kod
		{
			get
			{
				return this._meres_kod;
			}
			set
			{
				if ((this._meres_kod != value))
				{
					this.Onmeres_kodChanging(value);
					this.SendPropertyChanging();
					this._meres_kod = value;
					this.SendPropertyChanged("meres_kod");
					this.Onmeres_kodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_berendezes_azonosito", DbType="Int NOT NULL")]
		public int berendezes_azonosito
		{
			get
			{
				return this._berendezes_azonosito;
			}
			set
			{
				if ((this._berendezes_azonosito != value))
				{
					if (this._Berendezesek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onberendezes_azonositoChanging(value);
					this.SendPropertyChanging();
					this._berendezes_azonosito = value;
					this.SendPropertyChanged("berendezes_azonosito");
					this.Onberendezes_azonositoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Berendezesek_Kemhata", Storage="_Berendezesek", ThisKey="berendezes_azonosito", OtherKey="berendezesID", IsForeignKey=true)]
		public Berendezesek Berendezesek
		{
			get
			{
				return this._Berendezesek.Entity;
			}
			set
			{
				Berendezesek previousValue = this._Berendezesek.Entity;
				if (((previousValue != value) 
							|| (this._Berendezesek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Berendezesek.Entity = null;
						previousValue.Kemhatas.Remove(this);
					}
					this._Berendezesek.Entity = value;
					if ((value != null))
					{
						value.Kemhatas.Add(this);
						this._berendezes_azonosito = value.berendezesID;
					}
					else
					{
						this._berendezes_azonosito = default(int);
					}
					this.SendPropertyChanged("Berendezesek");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mikor_Kemhata", Storage="_Mikor1", ThisKey="mikor", OtherKey="datumID", IsForeignKey=true)]
		public Mikor Mikor1
		{
			get
			{
				return this._Mikor1.Entity;
			}
			set
			{
				Mikor previousValue = this._Mikor1.Entity;
				if (((previousValue != value) 
							|| (this._Mikor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mikor1.Entity = null;
						previousValue.Kemhatas.Remove(this);
					}
					this._Mikor1.Entity = value;
					if ((value != null))
					{
						value.Kemhatas.Add(this);
						this._mikor = value.datumID;
					}
					else
					{
						this._mikor = default(int);
					}
					this.SendPropertyChanged("Mikor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipus_Kemhata", Storage="_Tipus1", ThisKey="tipus", OtherKey="typeID", IsForeignKey=true)]
		public Tipus Tipus1
		{
			get
			{
				return this._Tipus1.Entity;
			}
			set
			{
				Tipus previousValue = this._Tipus1.Entity;
				if (((previousValue != value) 
							|| (this._Tipus1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipus1.Entity = null;
						previousValue.Kemhatas.Remove(this);
					}
					this._Tipus1.Entity = value;
					if ((value != null))
					{
						value.Kemhatas.Add(this);
						this._tipus = value.typeID;
					}
					else
					{
						this._tipus = default(int);
					}
					this.SendPropertyChanged("Tipus1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mikor")]
	public partial class Mikor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _datumID;
		
		private System.DateTime _datum;
		
		private string _ido;
		
		private int _szemely;
		
		private EntitySet<Kemhata> _Kemhatas;
		
		private EntitySet<Vezetokepesseg> _Vezetokepessegs;
		
		private EntityRef<Szemelyek> _Szemelyek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndatumIDChanging(int value);
    partial void OndatumIDChanged();
    partial void OndatumChanging(System.DateTime value);
    partial void OndatumChanged();
    partial void OnidoChanging(string value);
    partial void OnidoChanged();
    partial void OnszemelyChanging(int value);
    partial void OnszemelyChanged();
    #endregion
		
		public Mikor()
		{
			this._Kemhatas = new EntitySet<Kemhata>(new Action<Kemhata>(this.attach_Kemhatas), new Action<Kemhata>(this.detach_Kemhatas));
			this._Vezetokepessegs = new EntitySet<Vezetokepesseg>(new Action<Vezetokepesseg>(this.attach_Vezetokepessegs), new Action<Vezetokepesseg>(this.detach_Vezetokepessegs));
			this._Szemelyek = default(EntityRef<Szemelyek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int datumID
		{
			get
			{
				return this._datumID;
			}
			set
			{
				if ((this._datumID != value))
				{
					this.OndatumIDChanging(value);
					this.SendPropertyChanging();
					this._datumID = value;
					this.SendPropertyChanged("datumID");
					this.OndatumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datum", DbType="Date NOT NULL")]
		public System.DateTime datum
		{
			get
			{
				return this._datum;
			}
			set
			{
				if ((this._datum != value))
				{
					this.OndatumChanging(value);
					this.SendPropertyChanging();
					this._datum = value;
					this.SendPropertyChanged("datum");
					this.OndatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ido", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ido
		{
			get
			{
				return this._ido;
			}
			set
			{
				if ((this._ido != value))
				{
					this.OnidoChanging(value);
					this.SendPropertyChanging();
					this._ido = value;
					this.SendPropertyChanged("ido");
					this.OnidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_szemely", DbType="Int NOT NULL")]
		public int szemely
		{
			get
			{
				return this._szemely;
			}
			set
			{
				if ((this._szemely != value))
				{
					if (this._Szemelyek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnszemelyChanging(value);
					this.SendPropertyChanging();
					this._szemely = value;
					this.SendPropertyChanged("szemely");
					this.OnszemelyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mikor_Kemhata", Storage="_Kemhatas", ThisKey="datumID", OtherKey="mikor")]
		public EntitySet<Kemhata> Kemhatas
		{
			get
			{
				return this._Kemhatas;
			}
			set
			{
				this._Kemhatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mikor_Vezetokepesseg", Storage="_Vezetokepessegs", ThisKey="datumID", OtherKey="mikor")]
		public EntitySet<Vezetokepesseg> Vezetokepessegs
		{
			get
			{
				return this._Vezetokepessegs;
			}
			set
			{
				this._Vezetokepessegs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Szemelyek_Mikor", Storage="_Szemelyek", ThisKey="szemely", OtherKey="szemelyID", IsForeignKey=true)]
		public Szemelyek Szemelyek
		{
			get
			{
				return this._Szemelyek.Entity;
			}
			set
			{
				Szemelyek previousValue = this._Szemelyek.Entity;
				if (((previousValue != value) 
							|| (this._Szemelyek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Szemelyek.Entity = null;
						previousValue.Mikors.Remove(this);
					}
					this._Szemelyek.Entity = value;
					if ((value != null))
					{
						value.Mikors.Add(this);
						this._szemely = value.szemelyID;
					}
					else
					{
						this._szemely = default(int);
					}
					this.SendPropertyChanged("Szemelyek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kemhatas(Kemhata entity)
		{
			this.SendPropertyChanging();
			entity.Mikor1 = this;
		}
		
		private void detach_Kemhatas(Kemhata entity)
		{
			this.SendPropertyChanging();
			entity.Mikor1 = null;
		}
		
		private void attach_Vezetokepessegs(Vezetokepesseg entity)
		{
			this.SendPropertyChanging();
			entity.Mikor1 = this;
		}
		
		private void detach_Vezetokepessegs(Vezetokepesseg entity)
		{
			this.SendPropertyChanging();
			entity.Mikor1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Szemelyek")]
	public partial class Szemelyek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _szemelyID;
		
		private string _nev;
		
		private string _beosztas;
		
		private EntitySet<Mikor> _Mikors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnszemelyIDChanging(int value);
    partial void OnszemelyIDChanged();
    partial void OnnevChanging(string value);
    partial void OnnevChanged();
    partial void OnbeosztasChanging(string value);
    partial void OnbeosztasChanged();
    #endregion
		
		public Szemelyek()
		{
			this._Mikors = new EntitySet<Mikor>(new Action<Mikor>(this.attach_Mikors), new Action<Mikor>(this.detach_Mikors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_szemelyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int szemelyID
		{
			get
			{
				return this._szemelyID;
			}
			set
			{
				if ((this._szemelyID != value))
				{
					this.OnszemelyIDChanging(value);
					this.SendPropertyChanging();
					this._szemelyID = value;
					this.SendPropertyChanged("szemelyID");
					this.OnszemelyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nev", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nev
		{
			get
			{
				return this._nev;
			}
			set
			{
				if ((this._nev != value))
				{
					this.OnnevChanging(value);
					this.SendPropertyChanging();
					this._nev = value;
					this.SendPropertyChanged("nev");
					this.OnnevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beosztas", DbType="NVarChar(50)")]
		public string beosztas
		{
			get
			{
				return this._beosztas;
			}
			set
			{
				if ((this._beosztas != value))
				{
					this.OnbeosztasChanging(value);
					this.SendPropertyChanging();
					this._beosztas = value;
					this.SendPropertyChanged("beosztas");
					this.OnbeosztasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Szemelyek_Mikor", Storage="_Mikors", ThisKey="szemelyID", OtherKey="szemely")]
		public EntitySet<Mikor> Mikors
		{
			get
			{
				return this._Mikors;
			}
			set
			{
				this._Mikors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mikors(Mikor entity)
		{
			this.SendPropertyChanging();
			entity.Szemelyek = this;
		}
		
		private void detach_Mikors(Mikor entity)
		{
			this.SendPropertyChanging();
			entity.Szemelyek = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipus")]
	public partial class Tipus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeID;
		
		private string _tipus1;
		
		private string _azonosito;
		
		private EntitySet<Kemhata> _Kemhatas;
		
		private EntitySet<Vezetokepesseg> _Vezetokepessegs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void Ontipus1Changing(string value);
    partial void Ontipus1Changed();
    partial void OnazonositoChanging(string value);
    partial void OnazonositoChanged();
    #endregion
		
		public Tipus()
		{
			this._Kemhatas = new EntitySet<Kemhata>(new Action<Kemhata>(this.attach_Kemhatas), new Action<Kemhata>(this.detach_Kemhatas));
			this._Vezetokepessegs = new EntitySet<Vezetokepesseg>(new Action<Vezetokepesseg>(this.attach_Vezetokepessegs), new Action<Vezetokepesseg>(this.detach_Vezetokepessegs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tipus", Storage="_tipus1", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string tipus1
		{
			get
			{
				return this._tipus1;
			}
			set
			{
				if ((this._tipus1 != value))
				{
					this.Ontipus1Changing(value);
					this.SendPropertyChanging();
					this._tipus1 = value;
					this.SendPropertyChanged("tipus1");
					this.Ontipus1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_azonosito", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string azonosito
		{
			get
			{
				return this._azonosito;
			}
			set
			{
				if ((this._azonosito != value))
				{
					this.OnazonositoChanging(value);
					this.SendPropertyChanging();
					this._azonosito = value;
					this.SendPropertyChanged("azonosito");
					this.OnazonositoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipus_Kemhata", Storage="_Kemhatas", ThisKey="typeID", OtherKey="tipus")]
		public EntitySet<Kemhata> Kemhatas
		{
			get
			{
				return this._Kemhatas;
			}
			set
			{
				this._Kemhatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipus_Vezetokepesseg", Storage="_Vezetokepessegs", ThisKey="typeID", OtherKey="tipus")]
		public EntitySet<Vezetokepesseg> Vezetokepessegs
		{
			get
			{
				return this._Vezetokepessegs;
			}
			set
			{
				this._Vezetokepessegs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kemhatas(Kemhata entity)
		{
			this.SendPropertyChanging();
			entity.Tipus1 = this;
		}
		
		private void detach_Kemhatas(Kemhata entity)
		{
			this.SendPropertyChanging();
			entity.Tipus1 = null;
		}
		
		private void attach_Vezetokepessegs(Vezetokepesseg entity)
		{
			this.SendPropertyChanging();
			entity.Tipus1 = this;
		}
		
		private void detach_Vezetokepessegs(Vezetokepesseg entity)
		{
			this.SendPropertyChanging();
			entity.Tipus1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vezetokepesseg")]
	public partial class Vezetokepesseg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vezID;
		
		private double _vezetokepesseg1;
		
		private double _hofok;
		
		private int _tipus;
		
		private int _mikor;
		
		private int _meres_kod;
		
		private int _berendezes_azonosito;
		
		private EntityRef<Berendezesek> _Berendezesek;
		
		private EntityRef<Mikor> _Mikor1;
		
		private EntityRef<Tipus> _Tipus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvezIDChanging(int value);
    partial void OnvezIDChanged();
    partial void Onvezetokepesseg1Changing(double value);
    partial void Onvezetokepesseg1Changed();
    partial void OnhofokChanging(double value);
    partial void OnhofokChanged();
    partial void OntipusChanging(int value);
    partial void OntipusChanged();
    partial void OnmikorChanging(int value);
    partial void OnmikorChanged();
    partial void Onmeres_kodChanging(int value);
    partial void Onmeres_kodChanged();
    partial void Onberendezes_azonositoChanging(int value);
    partial void Onberendezes_azonositoChanged();
    #endregion
		
		public Vezetokepesseg()
		{
			this._Berendezesek = default(EntityRef<Berendezesek>);
			this._Mikor1 = default(EntityRef<Mikor>);
			this._Tipus1 = default(EntityRef<Tipus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vezID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vezID
		{
			get
			{
				return this._vezID;
			}
			set
			{
				if ((this._vezID != value))
				{
					this.OnvezIDChanging(value);
					this.SendPropertyChanging();
					this._vezID = value;
					this.SendPropertyChanged("vezID");
					this.OnvezIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vezetokepesseg", Storage="_vezetokepesseg1", DbType="Float NOT NULL")]
		public double vezetokepesseg1
		{
			get
			{
				return this._vezetokepesseg1;
			}
			set
			{
				if ((this._vezetokepesseg1 != value))
				{
					this.Onvezetokepesseg1Changing(value);
					this.SendPropertyChanging();
					this._vezetokepesseg1 = value;
					this.SendPropertyChanged("vezetokepesseg1");
					this.Onvezetokepesseg1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hofok", DbType="Float NOT NULL")]
		public double hofok
		{
			get
			{
				return this._hofok;
			}
			set
			{
				if ((this._hofok != value))
				{
					this.OnhofokChanging(value);
					this.SendPropertyChanging();
					this._hofok = value;
					this.SendPropertyChanged("hofok");
					this.OnhofokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipus", DbType="Int NOT NULL")]
		public int tipus
		{
			get
			{
				return this._tipus;
			}
			set
			{
				if ((this._tipus != value))
				{
					if (this._Tipus1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntipusChanging(value);
					this.SendPropertyChanging();
					this._tipus = value;
					this.SendPropertyChanged("tipus");
					this.OntipusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mikor", DbType="Int NOT NULL")]
		public int mikor
		{
			get
			{
				return this._mikor;
			}
			set
			{
				if ((this._mikor != value))
				{
					if (this._Mikor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmikorChanging(value);
					this.SendPropertyChanging();
					this._mikor = value;
					this.SendPropertyChanged("mikor");
					this.OnmikorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meres_kod", DbType="Int NOT NULL")]
		public int meres_kod
		{
			get
			{
				return this._meres_kod;
			}
			set
			{
				if ((this._meres_kod != value))
				{
					this.Onmeres_kodChanging(value);
					this.SendPropertyChanging();
					this._meres_kod = value;
					this.SendPropertyChanged("meres_kod");
					this.Onmeres_kodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_berendezes_azonosito", DbType="Int NOT NULL")]
		public int berendezes_azonosito
		{
			get
			{
				return this._berendezes_azonosito;
			}
			set
			{
				if ((this._berendezes_azonosito != value))
				{
					if (this._Berendezesek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onberendezes_azonositoChanging(value);
					this.SendPropertyChanging();
					this._berendezes_azonosito = value;
					this.SendPropertyChanged("berendezes_azonosito");
					this.Onberendezes_azonositoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Berendezesek_Vezetokepesseg", Storage="_Berendezesek", ThisKey="berendezes_azonosito", OtherKey="berendezesID", IsForeignKey=true)]
		public Berendezesek Berendezesek
		{
			get
			{
				return this._Berendezesek.Entity;
			}
			set
			{
				Berendezesek previousValue = this._Berendezesek.Entity;
				if (((previousValue != value) 
							|| (this._Berendezesek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Berendezesek.Entity = null;
						previousValue.Vezetokepessegs.Remove(this);
					}
					this._Berendezesek.Entity = value;
					if ((value != null))
					{
						value.Vezetokepessegs.Add(this);
						this._berendezes_azonosito = value.berendezesID;
					}
					else
					{
						this._berendezes_azonosito = default(int);
					}
					this.SendPropertyChanged("Berendezesek");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mikor_Vezetokepesseg", Storage="_Mikor1", ThisKey="mikor", OtherKey="datumID", IsForeignKey=true)]
		public Mikor Mikor1
		{
			get
			{
				return this._Mikor1.Entity;
			}
			set
			{
				Mikor previousValue = this._Mikor1.Entity;
				if (((previousValue != value) 
							|| (this._Mikor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mikor1.Entity = null;
						previousValue.Vezetokepessegs.Remove(this);
					}
					this._Mikor1.Entity = value;
					if ((value != null))
					{
						value.Vezetokepessegs.Add(this);
						this._mikor = value.datumID;
					}
					else
					{
						this._mikor = default(int);
					}
					this.SendPropertyChanged("Mikor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipus_Vezetokepesseg", Storage="_Tipus1", ThisKey="tipus", OtherKey="typeID", IsForeignKey=true)]
		public Tipus Tipus1
		{
			get
			{
				return this._Tipus1.Entity;
			}
			set
			{
				Tipus previousValue = this._Tipus1.Entity;
				if (((previousValue != value) 
							|| (this._Tipus1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipus1.Entity = null;
						previousValue.Vezetokepessegs.Remove(this);
					}
					this._Tipus1.Entity = value;
					if ((value != null))
					{
						value.Vezetokepessegs.Add(this);
						this._tipus = value.typeID;
					}
					else
					{
						this._tipus = default(int);
					}
					this.SendPropertyChanged("Tipus1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
